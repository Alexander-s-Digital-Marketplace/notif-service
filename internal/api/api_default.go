/*
 * Catering service
 *
 * Notif service.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	notifnewdish "github.com/KusakinDev/Catering-Notif-Service/internal/handlers/notif_new_dish"
	rabbitmq "github.com/KusakinDev/Catering-Notif-Service/internal/utils/RabbitMQ"
	"github.com/gin-gonic/gin"
)

type DefaultAPI struct {
	RMQ *rabbitmq.RabbitMQ
}

// Post /AddNewEmail
// Add new email for notification
func (api *DefaultAPI) AddNewEmailPost(c *gin.Context) {
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /NotifNewDish
// Create new notification in queue
func (api *DefaultAPI) NotifNewDishPost(c *gin.Context) {
	code, message := notifnewdish.NotifNewDish(c, api.RMQ)
	c.JSON(code, gin.H{"message": message})
}
